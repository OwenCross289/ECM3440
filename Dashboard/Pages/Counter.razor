@page "/counter"
@using Dashboard.Services.Interfaces
@using Dashboard.Models
@inject IMessageQueueService MessageQueueService

<h1>Counter</h1>

<p>Current soil moisture: @_value</p>

<button class="btn btn-primary" @onclick="GetSoilMoisture">Get Values</button>
<button class="btn btn-primary" @onclick="Disconnect">Disconnect</button>

@code {

    private int _value;

    protected override void OnInitialized()
    {
        MessageQueueService.Connect();
        MessageQueueService.DataReceived += MessageQueueServiceOnDataReceived();
    }

    private async Task GetSoilMoisture()
    {
        await MessageQueueService.EnableDataCollection();
    }

    private async Task Disconnect()
    {
        MessageQueueService.DataReceived -= MessageQueueServiceOnDataReceived();
        await MessageQueueService.Disconnect();
    }
    
    private EventHandler<SoilMoisture> MessageQueueServiceOnDataReceived()
    {
        return (_, moisture) =>
        {
            _value = moisture.Value;
            StateHasChanged();
        };
    }

}