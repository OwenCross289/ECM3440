name: .NET

on:
  push:
    branches:
      - 'main'
      - 'prod'

  pull_request:
    branches:    
      - 'main'
      - 'prod'

  schedule:
  - cron: 0 0 * * *

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --settings "runsettings.xml"

    - name: Copy SoilMoisture Coverage to Predictable Location
      run: cp SoilMoistureSensor.Tests/TestResults/*/coverage.info SoilMoistureSensor.Tests/TestResults/coverage.info
    - name: Copy Dashboard Coverage to Predictable Location
      run: cp Dashboard.Tests/TestResults/*/coverage.info Dashboard.Tests/TestResults/coverage.info

    - name: Coverlet SoilMoisture coverage test
      uses: b3b00/coverlet-action@1.2.4
      with:
        testProject: 'SoilMoistureSensor.Tests/SoilMoistureSensor.Tests.csproj'
        output: 'TestResults/coverage.info'
        outputFormat: 'lcov'
        excludes: '[program]*,[test]test.*'

    - name: Coverlet Dashboard coverage test
      uses: b3b00/coverlet-action@1.2.4
      with:
        testProject: 'Dashboard.Tests/Dashboard.Tests.csproj'
        output: 'TestResults/coverage.info'
        outputFormat: 'lcov'
        excludes: '[program]*,[test]test.*'
    
    - name: Install Report Generator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool --version 5.1.11
    - name: Run Report Generator
      run: reportgenerator -reports:**/coverage.info -targetdir:CoverageReport -reporttypes:lcov
    
    - name: Report Coveralls     
      uses: coverallsapp/github-action@v1.1.1
      with:
        github-token: ${{secrets.GITHUB_TOKEN }} 
        path-to-lcov: 'CoverageReport/lcov.info'